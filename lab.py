cipher= "BNPNOFCNOIACMFIEHADPIHOKKHAKJMKIDNCAAHPFKJAODJIINEDBAHMANGJCOJOFINALIACKABOJDKJFEOPCACJAAIOHKFJNMEKPKIIKCBBODOHNBAEBFBCHKHAOPGIHIMIGOEBNNKCKNEAKFPACDAHLDHOBLIDBCAKHHIBANHAOKFOCDNCJIHOOAAAOHOJEINMIICDKDFOCBFDAOAKCCICCCBADHKHCPAKJGIEFNJJGMOABOHAFHAGCKMHIBBIMCHCMAHDNDDFAEHPIIAOBIIIKKOAGMBKNCCKAIIDKADHHNKJCHAOJHOMHCHAHEJHIIFKMIIBOHBGNCOFNAOAKOJDNNLIEIAALJDAHEAGMBEHBFFNCFOOPANIAPPOMCEFCLMOOIINKIKCBEPEPDOAPAAKAHPIAAIDBMAONAOHNMHJFGMEGJEDDAHAAFCJAJMCIFFHBFLJHMHAKCCEDDFMKJCJAKPGMIHIHLAEDCJHKFHAPCKGFHAKLDIHHOMAFKHOMANANAJGNAAOMKEJPCGAHEABIOLPHGINCHCNFIAGKAHKNIOABDLLFAAEJCMAGGCDMEFAMAAANKMALFPCBMDMADEILFFHHAPGHHAKDHICHKBAEHDIMBMDJHHBCAEEPOKAHMAHCKFOKKCANNLICHAJHCPKMADACHPAPNNMDHCGCOBAGCBNCIONGOAHNNBOGBHADMNCPHHHDOIADHEICPANOHGFFKAANFKIFCIAGGAKFKMHIGJIDGAAKEAJMAEJOIHAFJKHDHHKDMCIMHMEBNNEGEOKMFCAAMHGFNNALIAIKABOGCMJPLCFPIGBKDDHEDGPKGAFAINIKICJHLIEKICACHACCNGCOACABNMFLAALAAAEAAGJKBCNAIANKONKFDANKEFOENIJFMCGHDECFKAEIGBAFOBAGJKOLGMFOAGPAAAHMNNJFOANAEALMMCJCBPCJOODDAPAAMCIPAPEDMODDAHPAFCOHLGAAHNAOCJAKOBABKEIPDMFLPGLDFJEKDJNBPFAIEJIMADMOJCABAKHBGHEFMNIGPPEMAOCJAHDAOJIDKBIGNAEKHJBHCKAKMEHFOOKFFIKHOCNNMBIOEOAKFJPHECOOCJOAEMOINIGFABCPDBANCAHICFGMMBAGOJEBEMHPHFKCKGEMMPIJIFLDADCNHLAMLEHDNONKJABAKBNHAIIOHADOJHDANPALBGAHACHJAHKNHJHCKGFDBMDOJPOAOMEFIHICIAOHNIFOKNAKHJIDBCADAAFJJFDOAEADANAJHAFDEKOHPAJLIHAHMAPFENFMBCOFIODHAPAANCIJFGOKIHAKJABAMBFIFOEFFAECEODMDHJALKHOEAOIIOIKKOADCGKAKKHENFDOONIJGHOJENAHOABOOPHOKENGDHNOEANMECHOFBOBDNFOAGMAMAAJBBCEHJADDAGDNCPGGNAEFANBKGGOOMANGANJLKACFJDHCHIAMMHNNDMAEEHMANHGFIJNGKAEAJAAKEINPOICNOAHAJFACKIBJPCJGCKMCICMOKHGEHIHCKCHFHCHNDIEGIAFCODAAPDAPHILPKFBJMOMOIMOADCLPDAHDAOCHIFHKBALMEIICKOEONFEDLIGOJPBIAOIOIJNANAKDCABCONLNHPONKOPALAKMMHCOHFEFPEBNOGJAAOPCOKMANAKOJABMDJFIPBKLKDJGMDICKHCCFPMFFICKPGPENKEAIMNNBOEJKGNAFAPIAFKAJHCLOAAKMKBJIGAKLCBADIBCAHAAFMNEFJJNNBAFFAEAAGNOKALPANDJKNFAALNEECKJNJOMMAMGAOFKJCFCMIHEHEJOBCENIFKMJAFPAELHBDHMMAHDHEBEMCCNHNOAIEFLNABGLPGHOBDAADPGCAFPNAKHHNCNPOAIJAFEAOBCIIMNDJCBKOOODOGAIAACMHALJCBPKCFJHCAFEIEBIGLKDKDBIIGANHEHMAPMNCFAHGFDIALCCDFIKCMHHMDOLIFDBIILFFPAGKAKDNCDJKCOOOAAOHNHCNPLBHABEMKGEAFMHOPICCFHONHPOPJAHOMHOAAACDPODEOHCHMEIHMHOHCHHGCKPIBHGIIGNHLOFCOEDOLKPJPDCAJAALNMPHIMLCJPDKJECCMAJPLMCJFIFOGNIOFANGFEBAFCMMBAEDAHDEJIDFPHMKJGINFKFCKLJIFLAKEECMMMPJPJHEBANAGOAAOOLHHGKNLPHNKEAFMEHHKELOMFNFOJGBEAMAAFDAPDKKCIIDKICKAALECIOFFAGKADFIELFDKPCKMIIEKOGHMFFNCMMAJAAMAMKCLAKCDBHMJEEFMCAFLADHLJANJIAKOAAAMEFAHMNAAJJCAMBANPIEKLFMHICNOADGGHPAAKOOEAOFNCHNMJKHNLAFICMJMAMAEDGACAMMCFCFHMFEOGGENGNCKJHJEAGADLAABOMMCFCMHMCEBBAEJLKCEFHOHKKINPGIBMFMAICJKNNGMAMOELANLIAOOAMANDHAADDJHAPINEMDEGCJBBHADAAPAKCMCJDILKNNPAOEFNOAPEEAKMNDGCPFMFFAENNNNAAAMEALMHCJAPCFFHHFHIMHKDHHJDIPMMMANJJPAAKEAHDJHKIKJGIENANEDACAFBAHKJLEANEAIKOAOCIAPGAFFKIHOFJIDGAFKHGNCNKABLPAPDAFBIAEKHJAPKLHFCFEONBOFADGBIGAFEFOGDIDLFKAHEEAFHANDJAPAMCAPFOENEKOHCNPMFOIPFAGAHFNIIACKKDGJODCDOKAECJDMFNILJBGMLAOKCIPMOPAJCOINMNDDAPFAANGOJOGCFOAFEAKMNNNANPOBJKNDHAOCEPKIJCBFHMABIAIKMFCMJEEDCOOKJNLAMFIILIELAOAKBJMEAFIBGPAJMHPDDODLIBGJPKECINAJHABCDEAIKMHJFOOKAIMAKDIONLIHHDHHAFMNOIPDPNNAPDMFIEAOAGPBCLAKONDLADAABCGEIMPNEEOBOIENKJOJENINHFDMCPLPANNAJJAEOAHHHMKDKNAMGHIFDADMMEIFDBJOHMHHKKAFHAAHKKIOEBIBDACCMHDFDLJCFJHMEHAEOABOABHKDBJANFNCIOHKDGGFOHHDGHAHHAHCNHFKPFAMCMBICNMMNPELOKOJBIKPAIAAKAEDMEIOEKKAHKBCKIIGLHIMJFAHJJBEAIMICMANFCNJOOPOHKHFMFHNEFAGHJFDABMHBPAEDFONPOFDKHAAINIOEADDOHNNKBAIEBIIODDOOHDOANHKKHJFPNOHAIANPMOBFACDAIOPAIHAOCEJOMICEHABAACNBJFAMMNIKMAHEJEIEOEPJLOCBDOAAICAPGHAFICBLAMAGEIFCKJCDNHCJDKPAIFAHPHNLHFNHMKLJIKAAMEEAAJKNIKIAIAAHNEOJKHCDKCBHHDDFIIGNLMPPDEIEOBMAMPPOKJKFKAHCJFMFPIOGMGIAAOHEIFOMBALJNEFBDAGHJNCOADMPMIICNOFAIJANFGPJEHGNOKKAICAAFILGEJGMHMBIEAKMBHEEFCECMCHNHNOMLENMJCCDHFAEGAMAMFPJEJGAKAFAJDAHNIJCNFAHDAEIABKCADPNOHOEOKNEIAMADNGHGAFKMHJPFHDOCEDHOIOBKABAACNMBCHOACLFOFBAGFAHPIHCOGOALLMEABIALDOEOAJJFMKHCCCMDGFLAEPGNDNIPAKHCOLAJFIOIKFAIIAOFECMLNPNHONIIEOFEFDMMAEKOOFJIEEAOIBHEAIHKNHGOKFKMIKFKIKKKCEEHIIANIJNHAHDKNFHOFDNEICLHADLOAJIJCKHPNKPLFKKDNFAAJADOPOICDBHAMAEEOMCMJIDHHPEDNODAOLDFPIEIHGMINDIALKCFEACAHPNFANGADNAPHEHIAFANBMAPHABFGBFPPMICOIAIANIOKNCCELAKDHFPBHNLIKBHGMBOAEAAPAHHEJNGHAMCMPIEJOKCHHOOIILAOMCNEMADAICAAADHPIAOAAAEGOHOJJAEKOKILKCFBKOGHDHAEDHBMHKMAJHEIABHAAAAMAOHPPEKNOLNMAAEMNKJOIDAKFCECIAHIAHCBGJHFNKIKGCIHMNDEJGEODEANHCADPMOALDAEPJFAAHJKCNHGEOLAJLCAPHAKCKHCCFEIDPFAOAJCNAAGJNFAHKMHLHHPCMHECCJEFGCDDODCOHNHBLIHKAOHKHHFCKAIOLHIIBFHNFFFHNOMMGPAJNODFCPIMFAIJNMNNLOAJAAHAHKILLGFIIDMJIEIOAFPGEPAEPKKGIKPOAHIJLBAFPNAEAJKAKBAMOHIHIOFJEGBMDMNIOHPPNAFFMNNFCFJKCHKMKAANAAHNHFJMHKHOINCIFHMHDKAHDOPEBAMBIEDOEEJKBLBMHECOAKEAKFJDENCNCKFBKGEKFLIDMPMJIOAJPAFDONOALNOAIEKPICNOFBOMHCGCKAFLINKOMFALAECDKKCMNKMOAKIJPOJNEMKMAIHAHAEFHMHKJDKPIIEKBCPNJONCPAMIIEDOMJJDDDEAAOAFPABDEDNDHGBCEAAFIAGKHMJMCHFIODKBIIMKAJDHCCACLNAACJMMFCAJLFGELHOAPODDMGHHDHEBBOALBJJENAILAHGFLOAHAAMAFPELPKGONAKFFIIHCBAJIEHJODMMBEMEAFHJHEADJNNNOOANAHAFNOABKLPFEOBIADDECLAANNACHHDCNAOPAEAFNAOFCIDMNBJGENOCAIOKAIJACJEKGKCDIKCBJHIAFFIOMHGNNHAPEAFMDKFLOFPAMAABAADNMCJFPNCCBOFGHGCHDCONLPPJMAMDIEOOMEJKFMEEBAAOAAINAAJOIDAJNONNNHHONNOGIOAFLMHOOHNEFGEKNBGGLAEAFJFHKKAHFFIDAMICOENNNBCFBEAFPAAGDAKLDBGFBNDNHAKAHIMANCAHECOIMNCFIHFOACAJIPJJANMNICFKDKOMNCDLLAKMCIHCCFAGIHHHHAKJGIPFNNJDENAAICAOIAPKCKCCOFHMEOMEHCACKAIOFDIHJNHAPFBDOIACEKIHCHAAOAEOACDNLFJPLINMAAJAOMELCJIAFHANEABMDHFIINPABAOOKIPKKOAJONIGCAONAICFNPALOAABDMAHIAHKFDCJPOAAKNODJNAAODAGGFINLAMDHEOHDAANCOPPMPNPNANONICOFLAMGDCDAHENADHGJMAHHNAGAJDAMCADNGEEOKDGADMAHOICPPHAHNCIFHLHKFAIOLIJLADFKHMKMCAHABEFMMCHDHKDOFEEJBOCHANFKGPJANAEBGAIPNAPCJNKNPAHELAPLODDAPHAAMOPAJJFEEKJKIMKCDBEKGHBPAEIDBFCOMABOKFOJBBFAKJADAKMHNDKNANDIGMOFNACKFAOOHANIAKKICFLFPEANNMJACHAACOCHIGNADLEIDOKACDOBCAFDNABHHMCNAOJAAALNAOFCIBMNBJMKDOAIDKBIIJKAFDHKNAAKCCPICGKAOHEFBJAFNFHAGDAADAPLAJPGANJPAADMAANLPEGHKHHHFLDAFIDPPAJGMKDHKLCMFEKAMEFEODPADNAHBOKFLDABAOOAOCNEIJEKLBHDAADAADNACJCAGADLKOFAOENMPCIHECIONFBEGCMAIONMBABDKBCJPJAKAILCFIKMFEJIOKKCGGCEOHOBHABAAAAFIMAMGHFMHKHIILOLCFIGHDNJNBMNMCOAAAOHFAHDMOFENDIMPEKNPCHOHFGIGPKHAFHBHFCADNCAAJAFBPPCEGKLDKBNIBFNHPEBPOJOAKHGIFHHAAOHHPMBILMADBAMEEOOOCFICFAEGCMDLHFGHPDJKNLFOCHFDIICOMILAILOEBNKKAIAFIAMHCBOHLOMIHDBCCIHAEBHJAHKDAODAIJJAODHNKHCDAAJEHGANOKHIOCFBOEGJMFOOFCEGMMDIIHMEHIHNACIABKFAOIDOGNHCKCIINKDDHFHODPJAKFAIPFNPAMIMAEFNNEJOBAKKAHFBCBKHOLAIBNDJFADBPGBAOFHIFHMMAIIBEAKMCCHHNHCDEIHMHCFHNHOAMOAAFHCNAKCMKPHCACMKEDLGEKPAFBDAGHOPAIIKONGNAEEJOIAGAIBNANDAOBCIHMKMABCNIAICMEECIMOEHDFONAAFKBIIAKKJGFHPCBJAMAIEPOMHJJBCEKFDAHPABDNNDBGLAJMAHBMFIFMJJDCGEFBMAAIAMODACHNMPICAFPPMOHHPAFDIGECILAADKANKELLFANADCIIHBOOKHIOOIMOIAPGAHFKCHJFEIODKDBADMACJIHOFCECKCJJHBAFBIKHJGFMNNIAAHAAGGBJKLBLAKKOIOONJAIGCOBOFNFAABNAAAKJHJMDJOKAIPANMPHCJOEPDKAAIGNAEHLFAJKMOONPNBJDJOIODEPKDMFIEHKACDBONACAHHCDPBLIPGHCHEBONAFHAACDAANLJHICMOHEIEIALEFCPAANMDCJDAAMBEDMAEDONCPPHADLPAFAFDOCKHAPHFDNPIMBKOJNHKEJIDAOBFPBKICHNNAAOBABFAJONPPOANGHGPFNMAMBEGKECAJAACNCDFIEJHFICKIIIKOACKLOMJIPANHOACNKMAKFHIFANDDJHGAONAEFCNFOCOKAINAHMHAFOGEHLHLDPEDKNDFIDIEMMANGAIFCFCCOFHONDMBOEBNKAPJNCICAKHHDFNDKDIIDBIEANADIALKCJOIFOHNDOHDCHIMNBOOPMABODAHEAHMAODBDMJJGCMJAENNDCHNKNPPFDLEADONIHHFOFEMBCKHAILAGCHKPHPHGANAFGANNHAAJOGMJGAGOAFNOCPCBLICHMDPJHPANIELNDOHKAKMFIOHAKANLPAGMMFICGNKMJEBBIEFDOAAEJPMABIOBAABPKAFCJGKOAIPHBIFLAANAACNAMJKNPAEDALHJAOAKDABGJICOKENHBBCEFKIHMBGFHAPJAMAMOFDFAEPANFKHAHHADAGNEJOGAKKNINODIAAFFPOLAEHHBJHCPAECNHOKFKCIIJOHCGAJNFFIOAOOJNNNFIKIJAPDHAAMABFMBFAGPCJAONCIAHODJNPGKPHPAAFEAMMKBJBOAKCDDKBNIBFEPPHIAONMMOHAIEAKIEMMNIKACFBBGFEOCHBGLNHGAFNJMIANAACODAEMHAFHAKCNPHIGMANHFHJEFAIANMLLHAACMKLHKGCMCEGKBECLADLDDGHOFANIBOCKNAFBJCEADAINGAFFMMPFCKHMMEGDEECJACAEHKMMFJIOBEHKOAFCAGMFOONLEGJIEFOANDAHKBHEFDMLNCFFHNHFFANBGMFIANHMGKBKLAGHBKIJHOJAIAAHIFJPNHPDOCJOHGNCMIIOBHBHFFMIMFOMMGHDPEGKHAHHANCNNFFMEAKDNDDJDPEAJAEHAACKFKBHIKCECGLHKBCJFOMANKAFPMCOCAKGCNCFADHNFKFFNAOJOFNPGCDOFICOAICFAAIEAEMKMJGEMKJJDKJNIMFECPJELOAJMOFAIBAHPEIHKHCFNDKCPHPOAAKLMNBICNJHAGDFBHLKIMMDOAHAAFAHMICCMFBJFADEAIMKMGCDGCKKAMCIEEOMBJFHMEGBAAOEAPMOFJLEINEBDMHIEFOAEPNCOAMJMHKPFBDOIECCDIANKAHIACKOKKOMIICGFAMAACNAGACHDAMFCODAIAACHKBLKHKMMNHOAJEOGCAHOIAPMCJJHIAOBEDKHINONMEBEGMMOGEIEBD"
# cipher = 'OMHGBPOMMMBEIIBGMMMKBBHMMNBBLBBM'
# cipher = 'EFMBHCCCMGGEIBENDNDNIPJKHLOANPFGCIFPBMEMMKEJHOBBIMMABBJMMBBOAABP'
# cipher = 'BFMAHCPCMIGJOKEBGNDJIPPKHBOADJFBPIFIBMFMMBECBOBCIMMCBBKMMMBGIIBL'

cleanCipher = ''
equalCharIndexes = {1,2,4,5,7,8,10,14}
block = 16
i = 0
for char in cipher:
    if i == block:
        i = 0
    for index in equalCharIndexes:
        if index == i:
            cleanCipher += char
    i+=1

symbols = {
"AA": " ",
"MB": "С",
"GF": "т",
"HC": "р",
"EM": "е",
"PD": "л",
"ON": "к",
"IK": "о",
"FH": "в",
"MF": "ы",
"IB": "й",
"FC": "Ш",
"CM": "с",
"JA": "н",
"BM": "",
"KB": "4",
"AN": "а",
"HN": "Б",
"KK": "б",
"DD": "г",
"NO": "д",
"DH": "Д",
"LH": "И",
"EI": "й",
"HD": "м",
"FN": "З",
"PB": "М",
"HF": "Н",
"KO": "О",
"LA": "П",
"HH": "п",
"CC": "ф",
"IO": "и",
"OE": "ш",
"CK": "ч",
"NB": "ж",
"OO": "у",
"BE": "я",
"PJ": "ю",
"DL": "-",
"NF": "ь",
"ED": "щ",
"KC": "х",
"AF": "з",
"CP": "ц",
"GN": ".",
"FP": "Т",
"JE": ",",
"HA": "У",
"EO": "В",
"OP": "2",
"FM": "ц",
"MH": "—",
"CF": "(",
"HM": ")",
"HI": "э",
"BG": ":",
"AJ": "0",
"GA": "3",
"DC": "1",
"AL": "8",
"DB": "Я",
"PH": "5",
"GH": "7",
"FO": "9",
}

# Замена позиций символов перед декодированием
def shuffleChars(text: str):
    return (
        text[3]+ 
        text[1]+ 
        text[6]+ 
        text[0]+
        text[2]+ 
        text[4]+
        text[7]+ 
        text[5]
        )

shuffledCipher = ''
for i in range(0, len(cleanCipher), int(block/2)):
    shuffledCipher += shuffleChars(cleanCipher[i:i+int(block/2)])

# Декодирование
decipherText = ''
for i in range(0, len(shuffledCipher), 2):
    if shuffledCipher[i:i + 2] in symbols:
        decipherText += symbols[shuffledCipher[i:i + 2]] 
    else:
        shuffledCipher[i:i + 2] 
print(''.join(decipherText))


